#!/usr/bin/env bash

set -o errexit  # abort on nonzero exit status
set -o pipefail # don't hide errors within pipes

shopt -s nullglob globstar

clip_time="${PASSWORD_STORE_CLIP_TIME:-45}"

if [[ -n $WAYLAND_DISPLAY ]]; then
	dmenu='dmenu-wl'
elif [[ -n $DISPLAY ]]; then
	dmenu='dmenu'
else
	echo "Error: No Wayland or X11 display detected" >&2
	exit 1
fi

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=("$prefix"/**/*.gpg)
password_files=("${password_files[@]#"$prefix"/}")
password_files=("${password_files[@]%.gpg}")

password_file=$(printf '%s\n' "${password_files[@]}" | "$dmenu" -c "$@")

[[ -n $password_file ]] || exit

field_name=$(
	cat <<EOF | "$dmenu" -c
password
username
email
app password
URL
cancel
EOF
)

[[ $field_name == 'cancel' ]] && exit

eval "$(keychain --dir "$XDG_STATE_HOME/keychain" --quiet --noask --eval --agents 'gpg' 'secretray')"

gpg_is_cached="$(
	gpg-connect-agent 'keyinfo --list' /bye 2>/dev/null | awk '{ if ($7==1) { print 1 } }'
)"

if [[ $gpg_is_cached -ne 1 ]]; then
	st -c 'term-float' -T 'pass pin entry' -g 68x13 -e pass -c "$password_file" 2>/dev/null
fi

if [[ $field_name == 'password' ]]; then
	pass -c "$password_file" 2>/dev/null
	exit
fi

secret="$(
	pass "$password_file" |
		awk -F ': ' -v field="$field_name" \
			'BEGIN {IGNORECASE = 1} $1 == field { print $2 }'
)"

[[ -n $secret ]] || exit

sleep_process_title='passmenu sleep'
pkill -x "$sleep_process_title" 2>/dev/null && sleep 0.5
printf '%s' "$secret" | xclip -r -selection 'clipboard' &&
	(
		(exec -a "$sleep_process_title" bash <<<"trap 'kill %1' TERM; sleep '$clip_time' & wait")
		xclip -selection 'clipboard' -i /dev/null
	) >/dev/null 2>&1 &
disown
